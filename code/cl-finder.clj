
(defn divide-rect [x1 y1 x2 y2]
   (let [delta-x (/ (- x2 x1) 2)
         delta-y (/ (- y2 y1) 2)
         mid-x (- x2 delta-x)
         mid-y (- y2 delta-y)]
      [[mid-x mid-y x2 y2]
       [x1 mid-y mid-x y2]
       [x1 y1 mid-x mid-y]
       [mid-x y1 x2 mid-y]]))

(defn inside-rect [[x y][x1 y1 x2 y2]]
   (and (>= x x1) (<= x x2) (>= y y1) (<= y y2)))

(defn rect-count [rect coll]
   (count (filter #(inside-rect % rect) coll)))

(divide-rect 0 0 20 20)

(defn find-richest [points [x1 y1 x2 y2]]
   (filter max (map 
      (fn [[x1 y1 x2 y2]] (rect-count [x1 y1 x2 y2] points)) 
         (divide-rect x1 y1 x2 y2))))
;volte os xy do retangulo, nao o count


(defn conquer [points initial-rect depth]
   (loop [actual-rect initial-rect num-iter depth densest []]
      (if (zero? num-iter)
          densest
          (recur x  (dec num-iter)  z)))) ;TODO x & z


(def points [
   [  2.724  -1.223 ] [  0.842  -0.375 ] [  0.440  -1.336 ] [ -0.403  -0.392 ]
   [  1.766  -1.977 ] [  0.254  -1.393 ] [  0.328  -1.009 ] [  2.981  -7.048 ]
   [ -3.567  -5.114 ] [ -0.365  -2.190 ] [ -0.965  -1.354 ] [  0.113  -0.636 ]
   [ -1.932   0.319 ] [  2.912  -2.231 ] [ -4.566  -4.560 ] [ -0.226  -1.122 ]
   [  0.018  -1.100 ] [ -0.791  -0.438 ] [  1.480  -0.768 ] [  3.087  -4.756 ]
   [  0.392  -0.997 ] [  1.208  -1.505 ] [  0.029  -0.165 ] [ -9.184  -1.539 ]
   [  0.327  -0.222 ] [ -0.190  -0.872 ] [  0.039  -1.510 ] [  2.739  -1.596 ]
   [ -3.472   0.778 ] [ 12.143  -0.977 ] [ -0.220  -0.058 ] [ -2.327  -7.777 ]
   [  6.169  -9.327 ] [  0.462   0.891 ] [  0.161  -0.475 ] [ -0.220  -1.020 ]
   [ -1.005  -0.711 ] [  0.024  -0.332 ] [ -1.745  -1.133 ] [-15.016 -45.441 ]
   [-17.608 -11.376 ] [ -7.750  -8.851 ] [ -0.948  -1.998 ] [  9.282 -15.558 ]
   [ -1.687  -2.473 ] [ -2.696  -1.073 ] [ -7.496 -14.455 ] [ -0.646  -9.085 ]
   [  0.423  -1.197 ] [ -0.998 -10.740 ] [ -0.906  -2.091 ] [  0.183  -0.859 ]
   [ -2.577  -0.537 ] [ -2.862   0.095 ] [ -1.993 -11.818 ] [ -0.766  -1.729 ]
   [  2.723  -5.614 ] [ -1.393  -7.123 ] [ -1.247  -5.304 ] [ -1.803  -0.935 ]
   [ -2.301   0.106 ] [-15.218 -15.872 ] [ -2.196  -6.231 ] [ -2.987 -20.276 ]
   [  9.248   4.422 ] [  0.085  -0.669 ] [  0.042  -7.292 ] [ -1.695  -3.386 ]
   [  4.518   0.787 ] [  5.022  -3.152 ] [ -0.792   2.954 ] [ 13.112 -17.905 ]
   [  1.047  -5.111 ] [  0.203 -13.234 ] [-25.764  -7.543 ] [-27.608 -17.086 ]
   [ -2.007  -5.829 ] [ -2.126  -5.359 ] [ -3.022  -5.821 ] [ -0.849  -6.544 ]
   [ -0.780  -0.943 ] [  5.058   8.613 ] [  0.925  -4.978 ] [ 12.702  -3.361 ]
   [ -9.551  -8.792 ] [ -2.397   0.777 ] [ -1.212  -4.596 ] [ -2.980  -5.264 ]
   [ -6.009  21.819 ] [  3.830 -11.441 ] [ -2.182  -4.653 ] [ -2.625  -4.044 ]
   [ -2.127  -9.124 ] [ -5.097  -0.987 ] [ -0.757  -2.646 ] [ 18.122 -11.415 ]
   [ 29.386 -10.790 ] [  1.810  -2.910 ] [ -0.605   0.748 ] [  0.647   1.424 ]
   [  0.326  -0.940 ] [  2.746  43.798 ] [ 33.265 -50.217 ] [ -2.890  -6.854 ]
   [ -2.380  -2.007 ] [ -2.532  -4.420 ] [  5.279  15.235 ] [  7.582  -8.001 ]
   [  3.339  10.474 ] [  2.547 -29.654 ] [-15.001 -46.610 ] [-11.224  -4.824 ]
   [  9.219  11.833 ] [ 73.423  33.604 ] [  1.547   7.679 ] [  4.044   2.282 ]])

